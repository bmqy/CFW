# HTTP(S) 代理服务端口
port: 7890

# SOCKS5 代理服务端口
socks-port: 7891

# Linux 和 macOS 的透明代理服务端口 (TCP 和 TProxy UDP 重定向)
redir-port: 7892

# Linux 的透明代理服务端口 (TProxy TCP 和 TProxy UDP)
# tproxy-port: 7893

# HTTP(S) 和 SOCKS4(A)/SOCKS5 代理服务共用一个端口
mixed-port: 7893

# 本地 SOCKS5/HTTP(S) 代理服务的认证
# authentication:
#  - "user1:pass1"
#  - "user2:pass2"

# 设置为 true 以允许来自其他 LAN IP 地址的连接
allow-lan: false

# 仅当 `allow-lan` 为 `true` 时有效
# '*': 绑定所有 IP 地址
# 192.168.122.11: 绑定单个 IPv4 地址
# "[aaaa::a8aa:ff:fe09:57d8]": 绑定单个 IPv6 地址
# bind-address: '*'

# Clash 路由工作模式
# rule: 基于规则的数据包路由
# global: 所有数据包将被转发到单个节点
# direct: 直接将数据包转发到互联网
mode: rule

# 默认情况下, Clash 将日志打印到 STDOUT
# 日志级别: info / warning / error / debug / silent
# log-level: info

# 当设置为 false 时, 解析器不会将主机名解析为 IPv6 地址
# ipv6: false

# RESTful Web API 监听地址
external-controller: 127.0.0.1:9090

# 配置目录的相对路径或静态 Web 资源目录的绝对路径. Clash core 将在
# `http://{{external-controller}}/ui` 中提供服务.
# external-ui: folder

# RESTful API 密钥 (可选)
# 通过指定 HTTP 头 `Authorization: Bearer ${secret}` 进行身份验证
# 如果RESTful API在 0.0.0.0 上监听, 务必设置一个 secret 密钥.
# secret: ""

# 出站接口名称
# interface-name: en0

# fwmark (仅在 Linux 上有效)
# routing-mark: 6666

# 用于DNS服务器和连接建立的静态主机 (如/etc/hosts) .
#
# 支持通配符主机名 (例如 *.clash.dev, *.foo.*.example.com)
# 非通配符域名优先级高于通配符域名
# 例如 foo.example.com > *.example.com > .example.com
# P.S. +.foo.com 等于 .foo.com 和 foo.com
# hosts:
  # '*.clash.dev': 127.0.0.1
  # '.dev': 127.0.0.1
  # 'alpha.clash.dev': '::1'

# profile:
  # 将 `select` 手动选择 结果存储在 $HOME/.config/clash/.cache 中
  # 如果不需要此行为, 请设置为 false
  # 当两个不同的配置具有同名的组时, 将共享所选值
  # store-selected: true

  # 持久化 fakeip
  # store-fake-ip: false

# DNS 服务设置
# 此部分是可选的. 当不存在时, DNS 服务将被禁用.
dns:
  enable: true # 不使用系统 DNS
  listen: 0.0.0.0:53
  # ipv6: false # 当为 false 时, AAAA 查询的响应将为空

  # 这些 名称服务器(nameservers) 用于解析下列 DNS 名称服务器主机名.
  # 仅指定 IP 地址
  default-nameserver:
    - 114.114.114.114
    - 8.8.8.8
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16 # Fake IP 地址池 CIDR
  # use-hosts: true # 查找 hosts 并返回 IP 记录

  # search-domains: [local] # A/AAAA 记录的搜索域

  # 此列表中的主机名将不会使用 Fake IP 解析
  # 即, 对这些域名的请求将始终使用其真实 IP 地址进行响应
  fake-ip-filter:
    - '*.lan'
    - 'cable.auth.com'
    - '+.msftconnecttest.com'
    - '+.msftncsi.com'
    - 'network-test.debian.org'
    - 'detectportal.firefox.com'
    - 'resolver1.opendns.com'
    - '+.srv.nintendo.net'
    - '+.stun.playstation.net'
    - 'xbox.*.microsoft.com'
    - '+.xboxlive.com'
    - 'stun.*'
    - 'global.turn.twilio.com'
    - 'global.stun.twilio.com'
    - 'localhost.*.qq.com'
    - '+.logon.battlenet.com.cn'
    - '+.logon.battle.net'
    - '+.blzstatic.cn'
    - '+.cmpassport.com'
    - 'id6.me'
    - 'open.e.189.cn'
    - 'mdn.open.wo.cn'
    - 'opencloud.wostore.cn'
    - 'auth.wosms.cn'
    - '+.jegotrip.com.cn'
    - '+.icitymobile.mobi'
    - '+.pingan.com.cn'
    - '+.cmbchina.com'
    - '+.cmbchina.com.cn'
    - '+?miwifi.com'
    - 'pool.ntp.org'
    - '+.pool.ntp.org'
    - 'ntp.*.com'
    - 'time.*.com'
    - 'ntp?.*.com'
    - 'time?.*.com'
    - 'time.*.gov'
    - 'time.*.edu.cn'
    - '+.ntp.org.cn'
    - 'time.*.apple.com'
    - 'PDC._msDCS.*.*'
    - 'DC._msDCS.*.*'
    - 'GC._msDCS.*.*'

  # 支持 UDP、TCP、DoT、DoH. 您可以指定要连接的端口.
  # 所有 DNS 查询都直接发送到名称服务器, 无需代理
  # Clash 使用第一个收到的响应作为 DNS 查询的结果.
  nameserver:
    - 114.114.114.114 # 默认值
    - 8.8.8.8 # 默认值
    - tls://dns.rubyfish.cn:853 # DNS over TLS
    - https://1.1.1.1/dns-query # DNS over HTTPS
    - dhcp://en0 # 来自 dhcp 的 dns
    # - '8.8.8.8#en0'

  # 当 `fallback` 存在时, DNS 服务器将向此部分中的服务器
  # 与 `nameservers` 中的服务器发送并发请求
  # 当 GEOIP 国家不是 `CN` 时, 将使用 fallback 服务器的响应
  # fallback:
  #   - tcp://1.1.1.1
  #   - 'tcp://1.1.1.1#en0'

  # 如果使用 `nameservers` 解析的 IP 地址在下面指定的子网中,
  # 则认为它们无效, 并使用 `fallback` 服务器的结果.
  #
  # 当 `fallback-filter.geoip` 为 true 且 IP 地址的 GEOIP 为 `CN` 时,
  # 将使用 `nameservers` 服务器解析的 IP 地址.
  #
  # 如果 `fallback-filter.geoip` 为 false, 且不匹配 `fallback-filter.ipcidr`,
  # 则始终使用 `nameservers` 服务器的结果
  #
  # 这是对抗 DNS 污染攻击的一种措施.
  # fallback-filter:
  #   geoip: true
  #   geoip-code: CN
  #   ipcidr:
  #     - 240.0.0.0/4
  #   domain:
  #     - '+.google.com'
  #     - '+.facebook.com'
  #     - '+.youtube.com'

  # 通过特定的名称服务器查找域名
  # nameserver-policy:
  #   'www.baidu.com': '114.114.114.114'
  #   '+.internal.crop.com': '10.0.0.1'
  
#========= 建立锚点 =========#

# 策略组引用
pr:   &a3 {type: select,   proxies: [auto, 手动, 香港节点, 日本节点, 美国节点, 台湾节点, 狮城节点, DIRECT] }
p:    &a1 {type: http,     interval: 86400,  health-check: {enable: true, url: http://www.gstatic.com/generate_204, interval: 1800} }
auto: &a4 {type: url-test, lazy: true,  url: http://www.gstatic.com/generate_204, interval: 900, use: [Subscribe] }
use:  &a2 {type: select,   use: [Subscribe] }
c:    &a6 {type: http,     behavior: classical, interval: 86400}
d:    &a5 {type: http,     behavior: domain,    interval: 86400}
i:    &a7 {type: http,     behavior: ipcidr,    interval: 86400}

proxy-providers:
  Subscribe:
    <<: *a1
    url: https://t.me/bmqytg.yaml
    # URL后面填写格式1[单一订阅]: 直接填写你的机场Clash订阅[推荐此种方式，避免订阅泄露]
    # URL后面填写格式2[多个订阅]：https://api.nexconvert.com/sub?target=clash&url=请手动填入你的订阅(多机场订阅用|分割即可)&emoji=true&list=true&new_name=true&udp=false
    path: ./proxy_providers/tmp.yaml
    
proxies: null
    # Shadowsocks 支持 aead_aes_128_gcm/aead_aes_192_gcm/aead_aes_256_gcm/aead_chacha20_poly1305/aes-128-ctr/aes-192-ctr/aes-256-ctr/aes-128-cfb/aes-192-cfb/aes-256-cfb/chacha20-ietf/xchacha20/chacha20/rc4-md5/xchacha20-ietf-poly1305 加密格式
    # Vmess 支持 auto/aes-128-gcm/chacha20-poly1305/none 加密方式

proxy-groups:
#分流分组
  - {name: 手动, <<: *a2}
  - {name: Global, <<: *a3}
  - {name: APPLE, <<: *a3}
  - {name: Bilibili, type: select, proxies: [DIRECT, 香港节点, 台湾节点]}
  - {name: OpenAi,   type: select, proxies: [美国节点]}
  - {name: 国际媒体, <<: *a3}
  - {name: Google, <<: *a3}
  - {name: Telegram, <<: *a3}
  - {name: Twitter, <<: *a3}
  - {name: Game, <<: *a3}
  - {name: AdBlock, type: select, proxies: [REJECT]}
  - {name: 兜底, <<: *a3}
  
#节点分组
  - {name: auto, <<: *a4}
  - {name: 香港节点, <<: *a4, filter: "港|HK|(?i)Hong"} # a4更改为a2，即为手动选择
  - {name: 日本节点, <<:  *a4, filter: "日|东京|JP|(?i)Japan"} # a4更改为a2，即为手动选择     
  - {name: 台湾节点, <<: *a4, filter: "台|湾|TW|(?i)Taiwan"} # a4更改为a2，即为手动选择
  - {name: 美国节点, <<: *a4, filter: "美|US|(?i)States|American"} # a4更改为a2，即为手动选择
  - {name: 狮城节点, <<: *a4, filter: "新|坡|SG|(?i)Singapore"} # a4更改为a2，即为手动选择

# tunnels:
  # 单行配置
  # - tcp/udp,127.0.0.1:6553,114.114.114.114:53,proxy
  # - tcp,127.0.0.1:6666,rds.mysql.com:3306,vpn
  # 全 yaml 配置
  # - network: [tcp, udp]
    # address: 127.0.0.1:7777
    # target: target.com
    # proxy: proxy

# https://github.com/Loyalsoldier/clash-rules
rule-providers:
  reject: {<<: *a5, url: https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt, path: ./ruleset/reject.yaml}
  icloud: {<<: *a5, url: https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/icloud.txt, path: ./ruleset/icloud.yaml}
  apple: {<<: *a5, url: https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/apple.txt, path: ./ruleset/apple.yaml}
  google: {<<: *a5, url: https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/google.txt, path: ./ruleset/google.yaml}
  proxy: {<<: *a5, url: https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/proxy.txt, path: ./ruleset/proxy.yaml}
  direct: {<<: *a5, url: https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/direct.txt, path: ./ruleset/direct.yaml}
  private: {<<: *a5, url: https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/private.txt, path: ./ruleset/private.yaml}
  gfw: {<<: *a5, url: https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/gfw.txt, path: ./ruleset/gfw.yaml}
  tld-not-cn: {<<: *a5, url: https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/tld-not-cn.txt, path: ./ruleset/tld-not-cn.yaml}
  telegramcidr: {<<: *a7, url: https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/telegramcidr.txt, path: ./ruleset/telegramcidr.yaml}
  cncidr: {<<: *a7, url: https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/cncidr.txt, path: ./ruleset/cncidr.yaml}
  lancidr: {<<: *a7, url: https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/lancidr.txt, path: ./ruleset/lancidr.yaml}
  applications: {<<: *a6, url: https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/applications.txt, path: ./ruleset/applications.yaml}
rules:
  - RULE-SET,applications,DIRECT
  - DOMAIN,clash.razord.top,DIRECT
  - DOMAIN,yacd.haishan.me,DIRECT
  - RULE-SET,private,DIRECT
  - RULE-SET,reject,REJECT
  - RULE-SET,icloud,DIRECT
  - RULE-SET,apple,DIRECT
  - RULE-SET,google,DIRECT
  - RULE-SET,proxy,PROXY
  - RULE-SET,direct,DIRECT
  - RULE-SET,lancidr,DIRECT
  - RULE-SET,cncidr,DIRECT
  - RULE-SET,telegramcidr,PROXY
  - GEOIP,LAN,DIRECT
  - GEOIP,CN,DIRECT
  - MATCH,PROXY
